
//Appraoch 1
vector<int>sum(arr,targetsum){
    int n=arr.size();
    for(int i=0;i<n;i++){
        for(int j=i+1;j<n;j++){
            if(arr[i]+arr[j]==targetsum){
                return {arr[i],arr[j]};
            }
        }
    }
    return {};
}

//Approach 2s
vector<int> twoSum(nums,target) {
    unordered_map<int, int> map;
    vector<int> result;
    for (int i = 0; i < nums.size(); i++) {
        int complement = target - nums[i];
        if (map.find(complement) != map.end()) {
            result[0] = i;
            result[1] = map[complement];
            return result;
        }
        map[nums[i]] = i;
    }
    
    return result;
}
